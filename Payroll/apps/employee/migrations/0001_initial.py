# Generated by Django 2.2 on 2020-08-30 18:38

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_1', models.FloatField(blank=True)),
                ('bonus_2', models.FloatField(blank=True)),
                ('bonus_3', models.FloatField(blank=True)),
                ('performance_bonus', models.FloatField(blank=True)),
                ('project_bonus', models.FloatField(blank=True)),
                ('other_bonus', models.FloatField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('official_email', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('joining_date', models.DateTimeField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='company.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('facility', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000)),
            ],
            options={
                'verbose_name': 'Facility',
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('grade', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HolidayLeave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('casual_leave', models.IntegerField(blank=True)),
                ('sick_leave', models.IntegerField(blank=True)),
                ('holiday', models.IntegerField(blank=True)),
                ('others', models.IntegerField(blank=True)),
            ],
            options={
                'verbose_name': 'Holiday Leave',
                'verbose_name_plural': 'Holiday Leaves',
            },
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('job_description', models.CharField(blank=True, max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalaryPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('basic', models.FloatField(blank=True)),
                ('house_rent', models.FloatField(blank=True)),
                ('medical_bill', models.FloatField(blank=True)),
                ('conveyance', models.FloatField(blank=True)),
                ('mobile_bill', models.FloatField(blank=True)),
                ('providend_fund', models.FloatField(blank=True)),
                ('gratuity', models.FloatField(blank=True)),
                ('net_monthly_salary', models.FloatField(blank=True)),
                ('net_yearly_salary', models.FloatField(blank=True)),
            ],
            options={
                'verbose_name': 'Salary Package',
                'verbose_name_plural': 'Salary Packages',
            },
        ),
        migrations.CreateModel(
            name='TaxableIncome',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sector', models.CharField(max_length=100)),
                ('percentage', models.FloatField(blank=True, default=0.0)),
                ('monthly_allowance', models.FloatField(blank=True, default=0.0)),
                ('yearly_allowance', models.FloatField(blank=True, default=0.0)),
                ('rules', models.CharField(blank=True, max_length=500)),
                ('notes', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Taxable Income',
                'verbose_name_plural': 'Taxable Incomes',
            },
        ),
        migrations.CreateModel(
            name='TaxPayerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_payer', models.PositiveSmallIntegerField(choices=[(1, 'male'), (2, 'female'), (3, 'freedom figter'), (4, 'parents of sepcial child'), (5, 'special child')], default=0)),
                ('max_non_taxable_amount', models.FloatField(default=0.0)),
                ('notes', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Tax Payer Type',
                'verbose_name_plural': 'Tax Payer Types',
            },
        ),
        migrations.CreateModel(
            name='TaxRebateRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tax Rebate Rule',
                'verbose_name_plural': 'Tax Rebate Rules',
            },
        ),
        migrations.CreateModel(
            name='TaxRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('tax_percentage', models.PositiveSmallIntegerField(choices=[(1, 5), (2, 10), (3, 15), (4, 20), (5, 25)], default=0)),
                ('tax_bracket', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Tax Rule',
                'verbose_name_plural': 'Tax Rules',
            },
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('raw_time', models.CharField(blank=True, max_length=100)),
                ('check_in', models.DateTimeField(blank=True)),
                ('check_out', models.DateTimeField(blank=True)),
                ('rounted_time', models.CharField(blank=True, max_length=100)),
                ('employee_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee.Employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('salary_issued_date', models.DateTimeField()),
                ('house_rent', models.FloatField(blank=True, default=0.0)),
                ('conveyance', models.FloatField(blank=True, default=0.0)),
                ('medical', models.FloatField(blank=True, default=0.0)),
                ('monthly_taxable_income', models.FloatField(blank=True, default=0.0)),
                ('yearly_taxable_income', models.FloatField(blank=True, default=0.0)),
                ('yearly_tax_without_investment', models.FloatField(blank=True, default=0.0)),
                ('yearly_tax_with_investment_rebate', models.FloatField(blank=True, default=0.0)),
                ('tax_this_month', models.FloatField(blank=True, default=0.0)),
                ('salary_this_month', models.FloatField(blank=True, default=0.0)),
                ('tax_this_month_with_rebate', models.FloatField(blank=True, default=0.0)),
                ('salary_this_month_with_rebate', models.FloatField(blank=True, default=0.0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee.Employee')),
            ],
            options={
                'verbose_name': 'Payroll',
                'verbose_name_plural': 'Payrolls',
            },
        ),
        migrations.CreateModel(
            name='EmployeeGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('promotion_date', models.DateTimeField(blank=True)),
                ('employee', models.OneToOneField(db_column='official_email', on_delete=django.db.models.deletion.PROTECT, to='employee.Employee')),
                ('grade', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='employee.Grade')),
            ],
            options={
                'verbose_name': 'Employee Grade',
                'verbose_name_plural': 'Employee Grades',
            },
        ),
        migrations.CreateModel(
            name='EmployeeFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ManyToManyField(to='employee.Facility')),
                ('grade', models.ManyToManyField(to='employee.Grade')),
            ],
            options={
                'verbose_name': 'Employee Facility',
                'verbose_name_plural': 'Employee Facilities',
            },
        ),
        migrations.CreateModel(
            name='EmployeeDesignation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('promotion_date', models.DateTimeField(blank=True)),
                ('designation', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='employee.JobTitle')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='employee.Employee')),
            ],
            options={
                'verbose_name': 'Employee Designation',
                'verbose_name_plural': 'Employee Designations',
            },
        ),
        migrations.CreateModel(
            name='EmployeeContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('contract_date', models.DateTimeField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee.Employee')),
                ('salary_package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee.SalaryPackage')),
            ],
            options={
                'verbose_name': 'Employee Contract',
                'verbose_name_plural': 'Employee Contracts',
            },
        ),
        migrations.CreateModel(
            name='EmployeeBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus', models.PositiveSmallIntegerField(choices=[(1, 'BONUS 1'), (2, 'BONUS 2'), (3, 'BONUS 3'), (4, 'BONUS PERFORMANCE'), (5, 'BONUS PROJECT'), (6, 'BONUS OTHER')], default=0)),
                ('payment_date', models.DateTimeField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee.Employee')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='tax_payer_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.TaxPayerType'),
        ),
    ]
